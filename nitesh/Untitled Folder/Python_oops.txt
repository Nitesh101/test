1) WAP to create BankAccount class and perform withdraw, deposit and current_balance operations...?

Ans:


class BankAccount:
	def __init__(self):
		self.balance = 0
	def withdraw(self,amount):
		self.balance -= amount
		return self.balance
	def deposite(self,amount):
		self.balance += amount
		return self.balance
	def current_balance(self):
		print self.balance
		return 
d = BankAccount()
d.deposite(100)
d.withdraw(50)
d.current_balance()

2) Define a class Person and its two child classes: Male and Female. All classes have a method "getGender" which can print "Male" for Male class and "Female" for Female class...?
Ans:

 class Person:
          def getGender(self,variable):
                   self.variable = variable
   
 class child(Person):
          def Male(self):
                  print self.variable + " male "
 class bychild(child):
         def Female(self):
                 print self.variable + "is female"
 
d = child()
w = bychild()
w.getGender("sri")
d.getGender("rajesh")
d.Male()
w.Female()
                


3) Write a Python class named Circle constructed by a radius and two methods which will compute the area and the perimeter of a circle...?
Ans:

class Circle:
	def __init__(self,radius):
		self.radius = radius		
	def area(self):
		return self.radius**2*3.14
	def perimeter(self):
		return 2*self.radius*3.14
d = Circle(10)
print (d.area())
4) What is setattr() used for? What is getattr() used for?
	What is the output of the following code?

	class change:
		def __init__(self, x, y, z):
		    self.a = x + y + z
	 
	x = change(1,2,3)
	y = getattr(x, 'a')
	setattr(x, 'a', y+1)
	print(x.a)


5) Write class, It should have a private method. and execute that private method..?
class Myclass:
	def mypublicMethod(self):
		print "this is public class"
	def __myprivateMethod(self):
		print "this is private"
val = Myclass()
val.mypublicMethod()
val._Myclass__myprivateMethod()
